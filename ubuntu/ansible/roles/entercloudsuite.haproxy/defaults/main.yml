---
# defaults vars

haproxy_user: admin
haproxy_pass: admin
haproxy_version: 1.8
haproxy_global: |
  global
      log /dev/log local0
      log /dev/log local1 notice
      chroot /var/lib/haproxy
      stats socket /run/haproxy/admin.sock mode 660 level admin
      stats timeout 30s
      user haproxy
      group haproxy
      daemon
      maxconn 200000
      nbproc "{{ ansible_processor_vcpus }}"
  {% for n in range(ansible_processor_vcpus) %}
      cpu-map {{ n + 1 }} {{ n }}
  {% endfor %}
      ca-base /etc/ssl/certs
      crt-base /etc/ssl/private
      ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS:!3DES
      ssl-default-bind-options no-sslv3
      tune.ssl.default-dh-param 2048
haproxy_defaults: |
  defaults
      option log-health-checks
      mode    http
      option  dontlognull
      timeout connect 8000
      timeout client  60000s
      timeout server  60000s
      errorfile 400 /etc/haproxy/errors/400.http
      errorfile 403 /etc/haproxy/errors/403.http
      errorfile 408 /etc/haproxy/errors/408.http
      errorfile 500 /etc/haproxy/errors/500.http
      errorfile 502 /etc/haproxy/errors/502.http
      errorfile 503 /etc/haproxy/errors/503.http
      errorfile 504 /etc/haproxy/errors/504.http
haproxy_stats: |
  listen stats
      bind *:8282
      mode http
      stats enable
      stats uri /
      stats realm Haproxy\ Statistics
      stats show-desc "HAProxy WebStatistics"
      stats show-node
      stats show-legends
      stats auth {{ haproxy_user }}:{{ haproxy_passÂ }}
      stats admin if TRUE
haproxy_conf: |
    frontend openshift-api-server
        bind *:6443
        default_backend openshift-api-server
        mode tcp
        option tcplog

    backend openshift-api-server
        balance source
        mode tcp
        server btstrap 192.168.1.116:6443 check
        server master1 192.168.1.111:6443 check
        server master2 192.168.1.112:6443 check
        server master3 192.168.1.113:6443 check

    frontend machine-config-server
        bind *:22623
        default_backend machine-config-server
        mode tcp
        option tcplog

    backend machine-config-server
        balance source
        mode tcp
        server btstrap 192.168.1.116:22623 check
        server master1 192.168.1.111:22623 check
        server master2 192.168.1.112:22623 check
        server master3 192.168.1.113:22623 check

    frontend ingress-http
        bind *:80
        default_backend ingress-http
        mode tcp
        option tcplog

    backend ingress-http
        balance source
        mode tcp
        server worker1 192.168.1.114:80 check
        server worker2 192.168.1.115:80 check

    frontend ingress-https
        bind *:443
        default_backend ingress-https
        mode tcp
        option tcplog

    backend ingress-https
        balance source
        mode tcp
        server worker1 192.168.1.114:443 check
        server worker2 192.168.1.115:443 check
haproxy_cert: {}
